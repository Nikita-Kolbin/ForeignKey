basePath: /api
definitions:
  admin.SignInRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  admin.SignInResponse:
    properties:
      error:
        type: string
      status:
        type: string
      token:
        type: string
    type: object
  admin.SignUpRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  cart.AddRequest:
    properties:
      count:
        type: integer
      product_id:
        type: integer
    type: object
  cart.ChangeCountRequest:
    properties:
      new_count:
        type: integer
      product_id:
        type: integer
    type: object
  cart.GetResponse:
    properties:
      cart_items:
        items:
          $ref: '#/definitions/storage.CartItem'
        type: array
      error:
        type: string
      status:
        type: string
    type: object
  customer.SignInRequest:
    properties:
      alias:
        type: string
      email:
        type: string
      password:
        type: string
    type: object
  customer.SignInResponse:
    properties:
      error:
        type: string
      status:
        type: string
      token:
        type: string
    type: object
  customer.SignUpRequest:
    properties:
      alias:
        type: string
      email:
        type: string
      password:
        type: string
    type: object
  image.UploadResponse:
    properties:
      error:
        type: string
      id:
        type: integer
      status:
        type: string
    type: object
  order.GetResponse:
    properties:
      error:
        type: string
      orders:
        items:
          $ref: '#/definitions/storage.Order'
        type: array
      status:
        type: string
    type: object
  product.CreateRequest:
    properties:
      alias:
        type: string
      product_info:
        $ref: '#/definitions/product.Info'
    type: object
  product.GetResponse:
    properties:
      error:
        type: string
      products:
        items:
          $ref: '#/definitions/storage.ProductInfo'
        type: array
      status:
        type: string
    type: object
  product.Info:
    properties:
      description:
        type: string
      image_id:
        type: integer
      name:
        type: string
      price:
        type: integer
    type: object
  response.Response:
    properties:
      error:
        type: string
      status:
        type: string
    type: object
  storage.CartItem:
    properties:
      cart_id:
        type: integer
      count:
        type: integer
      id:
        type: integer
      product:
        $ref: '#/definitions/storage.ProductInfo'
    type: object
  storage.Order:
    properties:
      date_time:
        type: string
      order_items:
        items:
          $ref: '#/definitions/storage.OrderItem'
        type: array
    type: object
  storage.OrderItem:
    properties:
      count:
        type: integer
      id:
        type: integer
      order_id:
        type: integer
      product:
        $ref: '#/definitions/storage.ProductInfo'
    type: object
  storage.ProductInfo:
    properties:
      description:
        type: string
      id:
        type: integer
      image_id:
        type: integer
      name:
        type: string
      price:
        type: integer
      website_id:
        type: integer
    type: object
  website.AliasesResponse:
    properties:
      aliases:
        items:
          type: string
        type: array
      error:
        type: string
      status:
        type: string
    type: object
  website.CreateRequest:
    properties:
      alias:
        type: string
    type: object
  website.GetStyleResponse:
    properties:
      background_color:
        type: string
      error:
        type: string
      font:
        type: string
      status:
        type: string
    type: object
  website.StyleRequest:
    properties:
      alias:
        type: string
      background_color:
        type: string
      font:
        type: string
    type: object
host: localhost:8082
info:
  contact: {}
  title: ForeignKey
  version: "1.0"
paths:
  /admin/sign-in:
    post:
      consumes:
      - application/json
      parameters:
      - description: sign in
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/admin.SignInRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/admin.SignInResponse'
      summary: SingIn admin
      tags:
      - auth
  /admin/sign-up:
    post:
      consumes:
      - application/json
      parameters:
      - description: sign up
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/admin.SignUpRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      summary: SingUp admin
      tags:
      - auth
  /cart/add:
    post:
      consumes:
      - application/json
      description: Добавляет товар в корзину, если товар уже в корзине, увеличивает
        количество
      parameters:
      - description: product id and count
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/cart.AddRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Create cart item
      tags:
      - cart
  /cart/change-count:
    patch:
      consumes:
      - application/json
      description: Изменяет кол-во товара в корзине на new_count
      parameters:
      - description: product id and count
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/cart.ChangeCountRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Change count curt item
      tags:
      - cart
  /cart/get:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/cart.GetResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all cart items
      tags:
      - cart
  /customer/sign-in:
    post:
      consumes:
      - application/json
      parameters:
      - description: sign in
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/customer.SignInRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/customer.SignInResponse'
      summary: SingIn customer
      tags:
      - auth
  /customer/sign-up:
    post:
      consumes:
      - application/json
      parameters:
      - description: sign up
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/customer.SignUpRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      summary: SingUp customer
      tags:
      - auth
  /image/download/{id}:
    get:
      description: При удачном запросе вернет картинку в body со статусом 200, при
        неудачном json с ошибкой
      parameters:
      - description: image id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - image/jpeg
      - image/png
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: integer
            type: array
      summary: DownloadImage
      tags:
      - files
  /image/upload:
    post:
      consumes:
      - image/jpeg
      - image/png
      description: В боди должна быть картинка в виде массива байт
      parameters:
      - description: byte image
        in: body
        name: input
        required: true
        schema:
          items:
            type: integer
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/image.UploadResponse'
      summary: UploadImage
      tags:
      - files
  /order/get:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/order.GetResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all orders
      tags:
      - order
  /order/make:
    post:
      description: Создает заказ исходя из корзины покупателя
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Make order
      tags:
      - order
  /product/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: alias new website
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/product.CreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Create product
      tags:
      - product
  /product/get-by-alias/{alias}:
    get:
      description: Возвращает все товары сайта по алиасу
      parameters:
      - description: website alias
        in: path
        name: alias
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/product.GetResponse'
      summary: GetByAlias
      tags:
      - product
  /website/aliases:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/website.AliasesResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all users aliases
      tags:
      - website
  /website/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: alias new website
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/website.CreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Create website
      tags:
      - website
  /website/delete/{alias}:
    delete:
      description: Удаляет сайт по алиасу
      parameters:
      - description: website alias
        in: path
        name: alias
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Delete website
      tags:
      - website
  /website/get-style/{alias}:
    get:
      parameters:
      - description: website alias
        in: path
        name: alias
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/website.GetStyleResponse'
      summary: Get website style
      tags:
      - website
  /website/set-style:
    patch:
      consumes:
      - application/json
      parameters:
      - description: style to website
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/website.StyleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Change style
      tags:
      - website
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
